---
import { SITE } from '@/consts'
import { isSubProject } from '@/lib/data-utils'
import type { CollectionEntry } from 'astro:content'

interface Props {
  project: CollectionEntry<'projects'>
}

const { project } = Astro.props

const title = project.data.title || SITE.title
const description = project.data.description || SITE.description
const image = new URL('/static/1200x630.png', Astro.site)
const contributor =
  project.data.contributors && project.data.contributors.length > 0
    ? project.data.contributors.join(', ')
    : SITE.author
---

<title>{`${title} | ${SITE.title}`}</title>
<meta name="title" content={`${title} | ${SITE.title}`} />
<meta name="description" content={description} />
<link rel="canonical" href={SITE.href} />

{isSubProject(project.id) && <meta name="robots" content="noindex" />}

<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta
  property="og:image"
  content={project?.data?.image?.src
    ? `${SITE.href}${project.data.image.src}`
    : image}
/>
<meta property="og:image:alt" content={title} />
<meta property="og:type" content="website" />
<meta property="og:locale" content={SITE.locale} />
<meta property="og:site_name" content={SITE.title} />
<meta property="og:url" content={Astro.url} />
<meta property="og:author" content={contributor} />

{
  project?.data.tags &&
    project.data.tags.map((tag: string) => {
      return <meta property="article:tag" content={tag} />
    })
}
